<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>deors.demos</groupId>
    <artifactId>petclinic</artifactId>
    <packaging>war</packaging>
    <version>1.0-SNAPSHOT</version>

    <name>deors-demos-petclinic</name>
    <description>The popular Spring Pet Clinic application, updated to work with Tomcat 7 and Spring 3</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <java.version>1.8</java.version>

        <servlet.version>2.5</servlet.version>
        <jsp.version>2.0</jsp.version>
        <jstl.version>1.2</jstl.version>
        <taglibs.version>1.1.2</taglibs.version>
        <xml-apis.version>1.4.01</xml-apis.version>
        <jaxb.version>2.1.7</jaxb.version>
        <jta.version>1.1.0</jta.version>
        <jpa.version>1.0</jpa.version>

        <spring.version>5.2.20.RELEASE</spring.version>
        <aspectj.version>1.6.8</aspectj.version>
        <slf4j.version>1.7.23</slf4j.version>
        <log4j.version>2.7</log4j.version>
        <commons-dbcp.version>1.2.2</commons-dbcp.version>
        <commons-pool.version>1.5.3</commons-pool.version>
        <hibernate.version>3.3.2.GA</hibernate.version>
        <hibernate-jpa.version>3.4.0.GA</hibernate-jpa.version>
        <toplink.version>2.0-41</toplink.version>
        <openjpa.version>1.1.0</openjpa.version>
        <rome.version>1.0</rome.version>

        <hsqldb.version>2.4.1</hsqldb.version>
        <mysql.version>5.1.6</mysql.version>
        <postgresql.version>9.1-901.jdbc4</postgresql.version>

        <junit.version>4.13</junit.version>
        <easymock.version>4.1</easymock.version>
        <selenium.version>3.141.59</selenium.version>
        <htmlunit.version>2.36.0</htmlunit.version>
        <pitest.version>1.4.11</pitest.version>
        <jmeter-plugin.version>3.0.0</jmeter-plugin.version>
        <jmeter.version>5.2.1</jmeter.version>
        <dependency-check.version>5.2.4</dependency-check.version>

        <jacoco.version>0.8.5</jacoco.version>
        <jacoco.path>${settings.localRepository}/org/jacoco/org.jacoco.agent/${jacoco.version}/org.jacoco.agent-${jacoco.version}-runtime.jar</jacoco.path>
        <jacoco.utReport>${project.build.directory}/jacoco.exec</jacoco.utReport>
        <jacoco.itReport>${project.build.directory}/jacoco-it.exec</jacoco.itReport>
        <jacoco.utAgentConfig>-javaagent:${jacoco.path}=destfile=${jacoco.utReport}</jacoco.utAgentConfig>
        <jacoco.itAgentConfig>-javaagent:${jacoco.path}=destfile=${jacoco.itReport}</jacoco.itAgentConfig>

        <jacoco-listeners.version>5.14.0.18788</jacoco-listeners.version>

        <compiler.version>3.8.1</compiler.version>
        <surefire.version>2.22.2</surefire.version>
        <failsafe.version>2.22.2</failsafe.version>
        <war.version>3.2.3</war.version>
        <dependency.version>3.1.1</dependency.version>

        <cargo.version>1.6.4</cargo.version>

        <tomcat.version>8.5.50</tomcat.version>
        <tomcat.downloadUrl>http://archive.apache.org/dist/tomcat/tomcat-8/v${tomcat.version}/bin/apache-tomcat-${tomcat.version}.zip</tomcat.downloadUrl>

        <wildfly.version>10.1.0.Final</wildfly.version>
        <wildfly.downloadUrl>http://download.jboss.org/wildfly/${wildfly.version}/wildfly-${wildfly.version}.zip</wildfly.downloadUrl>

        <jetty.version>8.1.9.v20130131</jetty.version>
        <jetty.downloadUrl>https://repo.maven.apache.org/maven2/org/eclipse/jetty/jetty-distribution/${jetty.version}/jetty-distribution-${jetty.version}.zip</jetty.downloadUrl>

        <!-- test properties -->
        <jmeter.target.host>localhost</jmeter.target.host>
        <jmeter.target.port>58080</jmeter.target.port>
        <jmeter.target.root>petclinic</jmeter.target.root>
        <jmeter.target.ownerId>9</jmeter.target.ownerId>
    </properties>

    <dependencies>
        <!-- Spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <!-- AspectJ -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectj.version}</version>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- DataSource -->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>${commons-dbcp.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <version>${commons-pool.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- Database drivers -->
        <!-- HSQLDB JDBC Connector -->
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>${hsqldb.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- MySQL JDBC Connector -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>${mysql.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- PostgreSQL JDB Connector -->
        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- Hibernate -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
        </dependency>

        <!-- JPA -->
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>${jpa.version}</version>
        </dependency>
        <!-- Hibernate JPA Provider -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate-jpa.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-annotations</artifactId>
            <version>${hibernate-jpa.version}</version>
        </dependency>
        <!-- Toplink JPA Provider -->
        <dependency>
            <groupId>toplink.essentials</groupId>
            <artifactId>toplink-essentials</artifactId>
            <version>${toplink.version}</version>
        </dependency>
        <!-- Open JPA Provider -->
        <dependency>
            <groupId>org.apache.openjpa</groupId>
            <artifactId>openjpa</artifactId>
            <version>${openjpa.version}</version>
        </dependency>

        <!-- Servlet -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>${servlet.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jsp-api</artifactId>
            <version>${jsp.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>${jstl.version}</version>
        </dependency>
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
            <version>${taglibs.version}</version>
        </dependency>

        <!-- Rome RSS -->
        <dependency>
            <groupId>rome</groupId>
            <artifactId>rome</artifactId>
            <version>${rome.version}</version>
        </dependency>

        <!-- JAXB -->
        <dependency>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
            <version>${xml-apis.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>${jaxb.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>${selenium.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>htmlunit-driver</artifactId>
            <version>${htmlunit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>org.jacoco.agent</artifactId>
            <version>${jacoco.version}</version>
            <classifier>runtime</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.sonarsource.java</groupId>
            <artifactId>sonar-jacoco-listeners</artifactId>
            <version>${jacoco-listeners.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>petclinic</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <useIncrementalCompilation>false</useIncrementalCompilation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${war.version}</version>
                <configuration>
                    <warName>petclinic</warName>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${dependency.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.jacoco</groupId>
                                    <artifactId>org.jacoco.agent</artifactId>
                                    <version>${jacoco.version}</version>
                                    <classifier>runtime</classifier>
                                    <destFileName>jacocoagent.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.jacoco</groupId>
                                    <artifactId>org.jacoco.cli</artifactId>
                                    <version>${jacoco.version}</version>
                                    <classifier>nodeps</classifier>
                                    <destFileName>jacococli.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
                <configuration>
                    <!-- JDK 7 - relax bytecode verifier to prevent double -->
                    <!-- instrumentation issues with OpenJPA tests and JaCoCo -->
                    <!-- <argLine>-XX:-UseSplitVerifier ${jacoco.utAgentConfig}</argLine> -->
                    <!-- JDK 8 - bytecode verifier cannot be relaxed or disabled -->
                    <!-- to prevent runtime errors, OpenJPA tests are ignored -->
                    <argLine>${jacoco.utAgentConfig}</argLine>
                    <excludes>
                        <exclude>**/*ApplicationTests.java</exclude>
                        <exclude>**/*IntegrationTestCase.java</exclude>
                    </excludes>
                    <properties>
                        <!-- add SonarQube's JaCoCo listener to enable -->
                        <!-- gathering of code coverage metrics per test -->
                        <property>
                            <name>listener</name>
                            <value>org.sonar.java.jacoco.JUnitListener</value>
                        </property>
                    </properties>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${failsafe.version}</version>
                <configuration>
                    <!-- JaCoCo must be enabled on target app container -->
                    <!--<argLine>${jacoco.itAgentConfig}</argLine>-->
                    <includes>
                        <include>**/*ApplicationTests.java</include>
                        <include>**/*IntegrationTestCase.java</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>${pitest.version}</version>
                <configuration>
                    <targetClasses>
                        <param>org.springframework.samples.petclinic.*</param>
                    </targetClasses>
                    <excludedClasses>
                        <param>org.springframework.samples.petclinic.it.*</param>
                    </excludedClasses>
                    <outputFormats>
                        <outputFormat>XML</outputFormat>
                    </outputFormats>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.lazerycode.jmeter</groupId>
                <artifactId>jmeter-maven-plugin</artifactId>
                <version>${jmeter-plugin.version}</version>
                <configuration>
                    <testResultsTimestamp>false</testResultsTimestamp>
                    <propertiesUser>
                        <host>${jmeter.target.host}</host>
                        <port>${jmeter.target.port}</port>
                        <root>${jmeter.target.root}</root>
                        <ownerId>${jmeter.target.ownerId}</ownerId>
                    </propertiesUser>
                </configuration>
                <executions>
                    <execution>
                        <id>configuration</id>
                        <goals>
                            <goal>configure</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>${dependency-check.version}</version>
                <configuration>
                    <format>ALL</format>
                    <!-- commenting build fail flag as this is an old
                         and insecure version of Spring Pet Clinic -->
                    <!-- <failBuildOnCVSS>5</failBuildOnCVSS> -->
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- Activated by OpenShift when building the app before deployment -->
        <profile>
            <id>openshift</id>
            <build>
                <finalName>petclinic</finalName>
                <plugins>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${war.version}</version>
                        <configuration>
                            <outputDirectory>deployments</outputDirectory>
                            <warName>ROOT</warName>
                            <webResources>
                                <resource>
                                    <!-- copy OpenShift specific resources -->
                                    <!-- this is relative to where the pom.xml file is -->
                                    <directory>src/main/resources/openshift</directory>
                                    <targetPath>WEB-INF/classes</targetPath>
                                </resource>
                            </webResources>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Activated only when building on Heroku -->
        <profile>
            <id>heroku</id>
            <activation>
                <file>
                    <exists>/app/tmp/cache/.maven/bin/mvn</exists>
                </file>
            </activation>
            <build>
                <finalName>petclinic</finalName>
                <plugins>
                    <plugin>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>${war.version}</version>
                        <configuration>
                            <webResources>
                                <resource>
                                    <!-- copy Heroku specific resources -->
                                    <!-- this is relative to where the pom.xml file is -->
                                    <directory>src/main/resources/heroku</directory>
                                    <targetPath>WEB-INF/classes</targetPath>
                                </resource>
                            </webResources>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>${dependency.version}</version>
                        <executions>
                            <execution>
                                <id>package</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy</goal>
                                </goals>
                                <configuration>
                                    <artifactItems>
                                        <artifactItem>
                                            <groupId>org.mortbay.jetty</groupId>
                                            <artifactId>jetty-runner</artifactId>
                                            <version>${jetty.version}</version>
                                            <destFileName>jetty-runner.jar</destFileName>
                                        </artifactItem>
                                        <!-- not available in jetty-runner -->
                                        <artifactItem>
                                            <groupId>javax.servlet</groupId>
                                            <artifactId>com.springsource.javax.servlet.jsp.jstl</artifactId>
                                            <version>${jstl.version}</version>
                                            <destFileName>jstl.jar</destFileName>
                                        </artifactItem>
                                        <artifactItem>
                                            <groupId>org.apache.taglibs</groupId>
                                            <artifactId>com.springsource.org.apache.taglibs.standard</artifactId>
                                            <version>${taglibs.version}</version>
                                            <destFileName>standard.jar</destFileName>
                                        </artifactItem>
                                    </artifactItems>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Cargo configuration to execute integration tests -->
        <!-- in an ad-hoc provisioned Tomcat container -->
        <profile>
            <id>cargo-tomcat</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <version>${cargo.version}</version>
                        <configuration>
                            <container>
                                <containerId>tomcat8x</containerId>
                                <zipUrlInstaller>
                                    <url>${tomcat.downloadUrl}</url>
                                </zipUrlInstaller>
                            </container>
                            <configuration>
                                <properties>
                                    <cargo.servlet.port>58080</cargo.servlet.port>
                                    <cargo.tomcat.ajp.port>58009</cargo.tomcat.ajp.port>
                                    <cargo.jvmargs>${jacoco.itAgentConfig}</cargo.jvmargs>
                                </properties>
                            </configuration>
                        </configuration>
                        <executions>
                            <!-- start server before integration tests -->
                            <execution>
                                <id>start-container</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <!-- stop server after integration tests -->
                            <execution>
                                <id>stop-container</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Cargo configuration to execute integration tests -->
        <!-- in an ad-hoc provisioned WildFly container -->
        <profile>
            <id>cargo-wildfly</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <version>${cargo.version}</version>
                        <configuration>
                            <container>
                                <containerId>wildfly10x</containerId>
                                <zipUrlInstaller>
                                    <url>${wildfly.downloadUrl}</url>
                                </zipUrlInstaller>
                            </container>
                            <configuration>
                                <properties>
                                    <cargo.servlet.port>58080</cargo.servlet.port>
                                    <cargo.jvmargs>${jacoco.itAgentConfig}</cargo.jvmargs>
                                </properties>
                            </configuration>
                        </configuration>
                        <executions>
                            <!-- start server before integration tests -->
                            <execution>
                                <id>start-container</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <!-- stop server after integration tests -->
                            <execution>
                                <id>stop-container</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Cargo configuration to execute integration tests -->
        <!-- in an ad-hoc provisioned Jetty container -->
        <profile>
            <id>cargo-jetty</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven2-plugin</artifactId>
                        <version>${cargo.version}</version>
                        <configuration>
                            <container>
                                <containerId>jetty8x</containerId>
                                <zipUrlInstaller>
                                    <url>${jetty.downloadUrl}</url>
                                </zipUrlInstaller>
                            </container>
                            <configuration>
                                <properties>
                                    <cargo.servlet.port>58080</cargo.servlet.port>
                                    <cargo.jvmargs>${jacoco.itAgentConfig}</cargo.jvmargs>
                                </properties>
                            </configuration>
                        </configuration>
                        <executions>
                            <!-- start server before integration tests -->
                            <execution>
                                <id>start-container</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <!-- stop server after integration tests -->
                            <execution>
                                <id>stop-container</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- add Selenium integration tests -->
        <profile>
            <id>selenium-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${failsafe.version}</version>
                        <configuration>
                            <includes>
                                <include>**/*IntegrationTestCase.java</include>
                            </includes>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- add JMeter performance tests -->
        <profile>
            <id>jmeter-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.lazerycode.jmeter</groupId>
                        <artifactId>jmeter-maven-plugin</artifactId>
                        <version>${jmeter-plugin.version}</version>
                        <configuration>
                            <testResultsTimestamp>false</testResultsTimestamp>
                            <propertiesUser>
                                <host>${jmeter.target.host}</host>
                                <port>${jmeter.target.port}</port>
                                <root>${jmeter.target.root}</root>
                                <ownerId>${jmeter.target.ownerId}</ownerId>
                            </propertiesUser>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>jmeter</goal>
                                    <goal>results</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
